generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("POSTGRES_URL")
}

model Task {
  id            String    @id @unique @db.Char(36)
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)
  name          String    @db.VarChar(255)
  description   String?   @db.VarChar(1023)
  position      Int
  points        Int
  column_id     String
  user_id       String
  related_tasks String[]
  completed     Boolean   @default(false)
  column        Column    @relation("ColumnTask", fields: [column_id], references: [id], onDelete: Cascade)
  user          User      @relation("User", fields: [user_id], references: [id], onDelete: Cascade)
  subtasks      Subtask[] @relation("TaskSubtask")

  @@index([column_id])
}

model Subtask {
  id         String    @id @unique @db.Char(36)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  name       String    @db.VarChar(255)
  task_id    String
  completed  Boolean   @default(false)
  task       Task      @relation("TaskSubtask", fields: [task_id], references: [id], onDelete: Cascade)

  @@index([task_id])
} 

model Account {
  id                String    @id @unique @db.Char(36)
  name              String
  users             UsersOnAccounts[]  
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @unique @db.Char(36)
  email         String?   @unique
  emailVerified DateTime?
  avatar        String?
  accounts      UsersOnAccounts[]
  sessions      Session[]
  Mission       Mission[]
}

model UsersOnAccounts {
  user        User     @relation(fields: [user_id], references: [id])
  user_id     String
  account     Account  @relation(fields: [account_id], references: [id])
  account_id  String
  assigned_at DateTime @default(now())

  @@id([user_id, account_id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}